{"version":3,"sources":["components/Navigation.tsx","App.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navigation","getActiveLinkClass","isActive","cn","className","to","App","role","HomePage","ErrorPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","findSemeNameOnColumnName","ParentName","find","selectedName","useParams","map","fatherPerson","fatherName","motherPerson","motherName","born","died","PeoplePage","useState","data","setData","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","catch","finally","length","Root","path","element","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.69cd77f6.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst Navigation = () => {\n  const getActiveLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav className=\"navbar-brand\">\n      <NavLink to=\"/\" className={getActiveLinkClass}>\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/people\"\n        className={getActiveLinkClass}\n      >\n        People\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport Navigation from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navigation />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n\nexport default HomePage;\n","const ErrorPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n\nexport default ErrorPage;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n\nexport default PersonLink;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport PersonLink from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  function findSemeNameOnColumnName(\n    ParentName: string | null,\n  ): Person | undefined {\n    return people.find((person) => person.name === ParentName);\n  }\n\n  const { selectedName } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map((person) => {\n          const fatherPerson = findSemeNameOnColumnName(person.fatherName);\n          const motherPerson = findSemeNameOnColumnName(person.motherName);\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({\n                'has-background-warning': selectedName === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {motherPerson ? (\n                  <PersonLink person={motherPerson} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {fatherPerson ? (\n                  <PersonLink person={fatherPerson} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import { useEffect, useState } from 'react';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport PeopleTable from '../components/PeopleTable';\n\nconst PeoplePage = () => {\n  const [data, setData] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((people) => {\n        setData(people);\n      })\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {data.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n          {(data.length > 0 && !isLoading && !errorMessage) && (\n            <PeopleTable people={data} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport HomePage from './pages/HomePage';\nimport ErrorPage from './pages/ErrorPage';\nimport PeoplePage from './pages/PeoplePage';\n\nconst Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<ErrorPage />} />\n          <Route index path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"people\">\n            <Route path=\":selectedName?\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport Root from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}